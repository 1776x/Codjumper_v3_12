// PC HUD - MP

#include "ui/menudef.h"

#define TEAM_IS_MARINES    (localVarString( ui_team ) == "marines")
#define TEAM_IS_OPFOR      (localVarString( ui_team ) == "opfor")

#define RANK_ORIGIN 0 6
#define ONLINEGAME (dvarInt( "onlinegame" ) && !dvarInt( "xblive_privatematch" ) )
#define ONLINEGAME_OFFSET 10

#define FLASH_OFS    ((sin(milliseconds()/90))*2)
#define FLASH_OFS2   ((sin(milliseconds()/90))*4)

#define HUD_ALPHA 0.65
#define HUD_FOREGROUND_ALPHA 0.75
#define DPAD_ICON_ALPHA 0.65

#define NOT_SPECTATING (!spectatingClient())

#define OBJICON( teamName, idx, texture, dvarName, showValue ) \
   itemDef \
   { \
      style       WINDOW_STYLE_SHADER \
      rect        (30*idx) -74 24 24 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
      exp            rect X( (30*idx) - ((FLASH_OFS) * dvarInt( dvarName+"_flash" )) ) \
      exp            rect Y( -74 - ((FLASH_OFS) * dvarInt( dvarName+"_flash" )) ) \
      exp            rect W( 24 + (FLASH_OFS2 * dvarInt( dvarName+"_flash" )) ) \
      exp            rect H( 24 + (FLASH_OFS2 * dvarInt( dvarName+"_flash" )) ) \
      origin         20 0 \
      background     texture \
      forecolor      1 1 1 0.61 \
      visible        when( dvarString( dvarName ) == showValue && team( name ) == teamName ); \
      decoration \
   }

#define  SCOREBAR_BORDER( setting, alliesColor, axisColor ) \
   itemDef \
   { \
      style       WINDOW_STYLE_FILLED \
      rect        36 -36 80 12 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
      forecolor      0 0 0 0 \
      border         1 \
      bordercolor    alliesColor 1 \
      bordersize     2 \
      visible when ( (tableLookup( "mp/mapsTable.csv", 0, dvarString( "mapname" ), 1 ) == setting) && team( name ) == "TEAM_ALLIES" ); \
      decoration \
   } \
   itemDef \
   { \
      style       WINDOW_STYLE_FILLED \
      rect        36 -36 80 12 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM \
      forecolor      0 0 0 0 \
      border         1 \
      bordercolor    axisColor 1 \
      bordersize     2 \
      visible when ( (tableLookup( "mp/mapsTable.csv", 0, dvarString( "mapname" ), 1 ) == setting) && team( name ) == "TEAM_AXIS" ); \
      decoration \
   }

#define TICKER_WIDTH( segID )    (segID*64) 1 64 6 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
#define TICKER_WIDTH_WS( segID )    (segID*85) 1 151 6 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM

#define HUD_TICKER( segID ) \
      itemDef \
      { \
         style       WINDOW_STYLE_SHADER \
         rect        TICKER_WIDTH( segID ) \
         origin         0 0 \
         background     "hud_xpticker480" \
         forecolor      1 1 1 HUD_FOREGROUND_ALPHA \
         visible        0 \
         decoration \
      } \
      itemDef \
      { \
         style       WINDOW_STYLE_SHADER \
         rect        TICKER_WIDTH_WS( segID ) \
         origin         0 0 \
         background     "hud_xpticker480ws" \
         forecolor      1 1 1 HUD_FOREGROUND_ALPHA \
         visible        0 \
         decoration \
      }

#define	BOTTOM_RECT_X 0
#define	BOTTOM_RECT_Y 0

#define MINIMAP_ORIGIN 2 11
{
	assetGlobalDef
	{
		fadeClamp		1					// sets the fadeup alpha
		fadeCycle		1					// how often fade happens in milliseconds
		fadeAmount		0.1					// amount to adjust alpha per cycle
	}

	// Low health overlay
	menuDef
	{
		name			"Low Health"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			0

		itemDef
		{
			name			"healthoverlay"
			rect			0 0 640 480
			forecolor		1 1 1 1
			background		"overlay_low_health"
			ownerdraw		CG_PLAYER_LOW_HEALTH_OVERLAY
			visible			0
			decoration
		}
	}

	// Mantle hint
	menuDef
	{
    	name			"MantleHint"
    	rect			0 105 40 40 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			when( dvarInt( ui_hud_hardcore ) == 0 )

		itemDef
		{
			name			"chRect"
			rect			0 0 40 40
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_MANTLE_HINT
			visible			when( NOT_SPECTATING )
			decoration
		}
	}

	// Cursor hints
	menuDef
	{
		name			"Cursorhints"
		rect			0 60 40 40 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			when( dvarInt( ui_hud_hardcore ) == 0 && !ui_active() )

		itemDef
		{
			name			"chRect"
			rect			0 0 40 40 // 64x64
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CURSORHINT
			visible			when( NOT_SPECTATING )
			decoration
		}
	}

	// Invalid cmd hint
	menuDef
	{
		name			"InvalidCmdHint"
		rect			0 -150 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			1

		itemDef
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_INVALID_CMD_HINT
			textfont		UI_FONT_NORMAL
			visible			when( NOT_SPECTATING )
			decoration
		}
	}

	// Stance indicator
	menuDef
	{
    	name			"stance"
    	// place this offscreen so it doesn't show the stance indicator but only shows the "prone blocked"
		rect			-1000 -1000 48 48 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
    	fullScreen		0
		visible			when( !flashbanged() && !ui_active() && NOT_SPECTATING );

		itemDef
		{
			name			"chRect"
			rect			0 0 80 80 // 64x64
			ownerdraw		CG_PLAYER_STANCE
			textfont		UI_FONT_OBJECTIVE
			visible			when( !inkillcam() && !selecting_location() && dvarint( ui_hud_hardcore ) == 0 );
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			forecolor		1 1 1 HUD_ALPHA
			decoration
		}
	}

	#define ALLIES_HAVE_UAV (dvarint( ui_uav_allies ) && team( name ) == "TEAM_ALLIES" )
	#define AXIS_HAVE_UAV (dvarint( ui_uav_axis ) && team( name ) == "TEAM_AXIS" )
	#define CLIENT_HAS_UAV (dvarint( ui_uav_client ) && team( name ) == "TEAM_FREE" )

	#define RECT_COMPASS	0 0 (COMPASS_SIZE_MP*.75) (COMPASS_SIZE_MP*.75) HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	#undef MINIMAP_ORIGIN
	#define MINIMAP_ORIGIN 	4 -4 //2 2

	// Compass
	menuDef
	{
		name			"Compass_old"
 	   	rect			RECT_COMPASS
 	   	fullScreen		0
		visible 		when ( team( name ) != "TEAM_SPECTATOR" && !inkillcam() && !flashbanged() && !scoped() && (dvarString( createfx ) != "on") && (dvarint( ui_hud_hardcore ) == 0 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ));//Removed ui_active

		itemDef
		{
			name			"minimapBG"
			rect			((MINIMAP_X_MP - 14)*.75) ((MINIMAP_Y_MP - 6)*.75) (COMPASS_SIZE_MP*.75) (COMPASS_SIZE_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"minimap_background"
			ownerdraw		CG_PLAYER_COMPASS_BACK
			visible when ( !selecting_location() );
			decoration
		}
		itemDef
        {
            name			"minimapTickerBorder"
            rect			(MINIMAP_X_MP*.75) ((MINIMAP_Y_MP +101)*.75) (MINIMAP_W_MP*.75) (14*.75)
	 	   	origin 			MINIMAP_ORIGIN
            forecolor		1 1 1 1
            background		"minimap_tickertape_background"
            ownerdraw		CG_PLAYER_COMPASS_BACK
			visible when ( !selecting_location() );
			decoration
        }
		itemDef
        {
            name			"minimapTicker"
            rect			(MINIMAP_X_MP*.75) ((MINIMAP_Y_MP + 104)*.75) (MINIMAP_W_MP*.75) (9*.75)
	 	   	origin 			MINIMAP_ORIGIN
            forecolor		1 1 1 1
            background		"minimap_tickertape_mp"
            ownerdraw		CG_PLAYER_COMPASS_TICKERTAPE_NO_OBJ
			visible when ( !selecting_location() );
			decoration
        }
		itemDef
 	   	{
			name			"mini_map"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_COMPASS_MAP
			visible when ( !selecting_location() );
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"compasspointers"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_COMPASS_POINTERS
			visible when ( !selecting_location() && dvarint( ui_hud_showobjicons ) > 0 );
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"compassfriendlies"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_FRIENDS
			visible when ( !selecting_location() );
		}
		// Enemy pings
		itemDef
		{
			name			"compassenemies"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_ENEMIES
			visible when ( !selecting_location() );
		}
 	   	// Helicopter pointers
		itemDef
		{
			name			"compasshelicopters"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_HELICOPTERS
			visible when ( !selecting_location() );
		}
 	   	// Plane pointers
		itemDef
		{
			name			"compassplanes"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_PLANES
			visible when ( !selecting_location() );
		}
		// Player direction indicator
		itemDef
		{
			name			"compassplayer"
			rect			(MINIMAP_X_MP*.75) (MINIMAP_Y_MP*.75) (MINIMAP_W_MP*.75) (MINIMAP_H_MP*.75)
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1//HUD_FOREGROUND_ALPHA
			background		"compassping_player"
			ownerdraw		CG_PLAYER_COMPASS_PLAYER
			visible when ( !selecting_location() );
		}
	}

	// XP bar
	menuDef
	{
		name			"xpbar"
		rect			BOTTOM_RECT_X -8 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		0//when( !dvarInt( "xblive_privatematch" ) && dvarInt( "onlinegame" ) && !inkillcam() && !ui_active() && dvarInt( ui_hud_hardcore ) == 0 && NOT_SPECTATING );

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 0 640 8 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin			0 0
			background		"white"
			forecolor		0 0 0 0.25
			visible			0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 2 540 4 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			exp				rect W( 640 * ((stat(2301)-stat(2351))/(stat(2352)-stat(2351))) );
			origin			0 0
			background		"scorebar_fadein"
			forecolor		1 0.8 0.4 HUD_ALPHA
			visible			0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 0 854 8 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			origin			0 0
			background		"white"
			forecolor		0 0 0 0.25
			visible			0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 2 720 4 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
			exp				rect W( 854 * ((stat(2301)-stat(2351))/(stat(2352)-stat(2351))) );
			origin			0 0
			background		"scorebar_fadein"
			forecolor		1 0.8 0.4 HUD_FOREGROUND_ALPHA
			visible			0
			decoration
		}

		HUD_TICKER( 0 )
		HUD_TICKER( 1 )
		HUD_TICKER( 2 )
		HUD_TICKER( 3 )
		HUD_TICKER( 4 )
		HUD_TICKER( 5 )
		HUD_TICKER( 6 )
		HUD_TICKER( 7 )
		HUD_TICKER( 8 )
		HUD_TICKER( 9 )

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 0 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			RANK_ORIGIN
			background		"rank_icon_bg"
			forecolor		0 0 0 HUD_ALPHA
			visible			0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			2 2 24 24 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			RANK_ORIGIN
			background		"rank_rec1"
			forecolor		1 1 1 HUD_ALPHA
			visible			0
			decoration
		}

	}

	#define SCORE_OFFSET_X	4
	#define SCORE_OFFSET_Y	2


	// Bottom bar
	menuDef
	{
		name			"scorebars"
		rect			0 0 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible 		when( !inkillcam() && dvarint( ui_hud_hardcore ) == 0 );//remvoed ui_active

		itemDef
		{
			rect		0 10 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			origin		0 0
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( timeLeft() >= 60 && !dvarBool( ui_bomb_timer ) );
			forecolor	1 1 1 HUD_FOREGROUND_ALPHA
			decoration
		}
		itemDef
		{
			rect		0 10 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			origin		0 0
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.75 0 HUD_FOREGROUND_ALPHA
			visible 	when ( timeLeft() >= 30 && timeLeft() < 60 && !dvarBool( ui_bomb_timer ) );
			decoration
		}
		itemDef
		{
			rect		0 10 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
			origin		6 0
			exp text	( secondsAsCountdown( timeLeft() ) + "." + (9 - int( (milliseconds() / 100)%10 )) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.5 0 1
			visible 	when ( (timeLeft() >= 0 && timeLeft() < 30) || dvarBool( ui_bomb_timer ) );
			decoration
		}

		/*
		OBJICON( "TEAM_ALLIES", 0, "compass_waypoint_captureneutral_a", "scr_obj_a", "neutral" )
		OBJICON( "TEAM_ALLIES", 0, "compass_waypoint_defend_a", "scr_obj_a", "allies" )
		OBJICON( "TEAM_ALLIES", 0, "compass_waypoint_capture_a", "scr_obj_a", "axis" )
		OBJICON( "TEAM_AXIS", 0, "compass_waypoint_captureneutral_a", "scr_obj_a", "neutral" )
		OBJICON( "TEAM_AXIS", 0, "compass_waypoint_capture_a", "scr_obj_a", "allies" )
		OBJICON( "TEAM_AXIS", 0, "compass_waypoint_defend_a", "scr_obj_a", "axis" )

		OBJICON( "TEAM_ALLIES", 1, "compass_waypoint_captureneutral_b", "scr_obj_b", "neutral" )
		OBJICON( "TEAM_ALLIES", 1, "compass_waypoint_defend_b", "scr_obj_b", "allies" )
		OBJICON( "TEAM_ALLIES", 1, "compass_waypoint_capture_b", "scr_obj_b", "axis" )
		OBJICON( "TEAM_AXIS", 1, "compass_waypoint_captureneutral_b", "scr_obj_b", "neutral" )
		OBJICON( "TEAM_AXIS", 1, "compass_waypoint_capture_b", "scr_obj_b", "allies" )
		OBJICON( "TEAM_AXIS", 1, "compass_waypoint_defend_b", "scr_obj_b", "axis" )

		OBJICON( "TEAM_ALLIES", 2, "compass_waypoint_captureneutral_c", "scr_obj_c", "neutral" )
		OBJICON( "TEAM_ALLIES", 2, "compass_waypoint_defend_c", "scr_obj_c", "allies" )
		OBJICON( "TEAM_ALLIES", 2, "compass_waypoint_capture_c", "scr_obj_c", "axis" )
		OBJICON( "TEAM_AXIS", 2, "compass_waypoint_captureneutral_c", "scr_obj_c", "neutral" )
		OBJICON( "TEAM_AXIS", 2, "compass_waypoint_capture_c", "scr_obj_c", "allies" )
		OBJICON( "TEAM_AXIS", 2, "compass_waypoint_defend_c", "scr_obj_c", "axis" )

		OBJICON( "TEAM_ALLIES", 3, "compass_waypoint_captureneutral_d", "scr_obj_d", "neutral" )
		OBJICON( "TEAM_ALLIES", 3, "compass_waypoint_defend_d", "scr_obj_d", "allies" )
		OBJICON( "TEAM_ALLIES", 3, "compass_waypoint_capture_d", "scr_obj_d", "axis" )
		OBJICON( "TEAM_AXIS", 3, "compass_waypoint_captureneutral_d", "scr_obj_d", "neutral" )
		OBJICON( "TEAM_AXIS", 3, "compass_waypoint_capture_d", "scr_obj_d", "allies" )
		OBJICON( "TEAM_AXIS", 3, "compass_waypoint_defend_d", "scr_obj_d", "axis" )

		OBJICON( "TEAM_ALLIES", 4, "compass_waypoint_captureneutral_e", "scr_obj_e", "neutral" )
		OBJICON( "TEAM_ALLIES", 4, "compass_waypoint_defend_e", "scr_obj_e", "allies" )
		OBJICON( "TEAM_ALLIES", 4, "compass_waypoint_capture_e", "scr_obj_e", "axis" )
		OBJICON( "TEAM_AXIS", 4, "compass_waypoint_captureneutral_e", "scr_obj_e", "neutral" )
		OBJICON( "TEAM_AXIS", 4, "compass_waypoint_capture_e", "scr_obj_e", "allies" )
		OBJICON( "TEAM_AXIS", 4, "compass_waypoint_defend_e", "scr_obj_e", "axis" )
		*/
	}

	//#define WEAPINFO_X -150
	//#define WEAPINFO_Y -60
	#define WEAPINFO_X -4
	#define WEAPINFO_Y -36

	menuDef
	{
		name			"weaponinfo"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 0 0 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_BOTTOM
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible			0//when( !inkillcam() && dvarBool( ammoCounterHide ) == 0 && !flashbanged() && !ui_active() && dvarint( ui_hud_hardcore ) == 0 && NOT_SPECTATING );

		itemDef
		{
			name			"clipGraphic"
			rect			(WEAPINFO_X) (WEAPINFO_Y + 40) 1 1
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_PLAYER_WEAPON_AMMO_CLIP_GRAPHIC
			visible			0//1
			decoration
		}

		itemDef
		{
			name			"ammoStock"
			rect			(WEAPINFO_X - 10) (WEAPINFO_Y + 34) 1 1
			textscale		(TEXTSIZE_SMALL/2)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_PLAYER_WEAPON_AMMO_STOCK
			visible			0//1
			decoration
		}

		itemDef
		{
			name			"offhandFragIcon"
			rect			(WEAPINFO_X -36) (WEAPINFO_Y -5) 24 24
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_ICON_FRAG
			background		"hud_us_grenade" // default texture
			visible			0
			decoration
		}

		itemDef
		{
			name			"offhandSmokeIcon"
			rect			(WEAPINFO_X -66) (WEAPINFO_Y -5) 24 24
			forecolor		1 1 1 HUD_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_ICON_SMOKEFLASH
			background		"hud_us_smokegrenade" // default texture
			visible			0
			decoration
		}
		itemDef
		{
			name			"offHandSmokeAmmo"
			rect			(WEAPINFO_X -45) (WEAPINFO_Y +20) 25 25
			textscale		(TEXTSIZE_SMALL/2)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_AMMO_SMOKEFLASH
			visible			0
			decoration
		}

		itemDef
		{
			name			"offHandFragAmmo"
			rect			(WEAPINFO_X -14) (WEAPINFO_Y +20) 25 25
			textscale		(TEXTSIZE_SMALL/2)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_OFFHAND_WEAPON_AMMO_FRAG
			visible			0
			decoration
		}

		itemDef
		{
			name			"weapname"
			rect			(WEAPINFO_X + 27) (WEAPINFO_Y + 24) 1 1
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textscale		(TEXTSIZE_SMALL/2)
			textfont		UI_FONT_OBJECTIVE
			forecolor		1 1 1 HUD_FOREGROUND_ALPHA
			ownerdraw		CG_PLAYER_WEAPON_NAME
//			visible when ( dvarBool( hiDef ) == 1 );
			visible 		0//1
			decoration
		}
	}

	// Full Screen Map for location selection
	#define FULL_SCREEN_MAP_WIDTH 400
	#define FULL_SCREEN_MAP_HEIGHT 400
	menuDef
	{
		name			"FullScreenMap"
 	   	rect			-100 -100 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
 	   	fullScreen		0
  	   	visible			1

		#define FSM_VISIBILITY (selecting_location() && NOT_SPECTATING)

		itemDef
 	   	{
			name			"map_map"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_MAP
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		itemDef
 	   	{
			name			"map_locator"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_LOCATION_SELECTOR
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"mappointers"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_FULLMAP_POINTERS
			visible			when( FSM_VISIBILITY );
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"mapfriendlies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_FRIENDS
			visible			when( FSM_VISIBILITY );
		}
 	   	// Enemies pointers
		itemDef
		{
			name			"mapenemies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_ENEMIES
			visible			when( FSM_VISIBILITY );
		}
		// Player direction indicator
		itemDef
		{
			name			"mapplayer"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compassping_player"
			ownerdraw		CG_PLAYER_FULLMAP_PLAYER
			visible			when( FSM_VISIBILITY );
		}

		// border
		itemDef
		{
			name			"mapborder"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"map_border"
			ownerdraw		CG_PLAYER_FULLMAP_BORDER
			visible			when( FSM_VISIBILITY );
			decoration
		}

		// instruction
		itemDef
		{
			name			"airstrikeinstruction"
			rect			100 -60 20 20
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_CENTER
			textscale		0.4
			forecolor		1 1 1 1
			text			"@PLATFORM_PRESS_TO_SET_AIRSTRIKE"
			visible			when( FSM_VISIBILITY );
			decoration
		}
	}

	#define	DPAD_BASE_SIZE		28
	#define	DPAD_BASE_SIZE_HALF	14
	#define DPAD_ICON_Y			-1//3
	#define DPAD_LABEL_Y		40//44
	#define DPAD_ICON_SPACING	60

	menuDef
	{
		name			"DPad"
 	   	rect			84 6 0 0 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
 	   	fullScreen		0
		visible			when( !inkillcam() && !flashbanged() && !scoped() && (dvarString( createfx ) != "on") && dvarint( ui_hud_hardcore ) == 0 )

		itemDef
		{
			rect		0 32 0 0 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			exp text	( "[RPG: ^2" + KeyBinding( "+actionslot 4" ) + "^7]" );
			forecolor	1 1 1 0.8
			//exp forecolor A	( 0 * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.15
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( ActionSlotUsable( 4 ) && team( name ) != "TEAM_SPECTATOR" );
			decoration
		}

		itemDef
		{
			rect		0 24 0 0 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			exp text	( "[Suicide: (Hold) ^2" + KeyBinding( "+melee" ) + "^7]" );
			forecolor	1 1 1 0.8
			//exp forecolor A	( 1 * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.15
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( team( name ) != "TEAM_SPECTATOR" );
			decoration
		}

		itemDef
		{
			rect		0 16 0 0 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			exp text	( "[Load: ^2" + KeyBinding( "+activate" ) + " ^7x2]" );
			forecolor	1 1 1 0.8
			//exp forecolor A	( HUD_ALPHA * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.15
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( team( name ) != "TEAM_SPECTATOR" );
			decoration
		}

		itemDef
		{
			rect		0 8 0 0 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			exp text	( "[Save: ^2" + KeyBinding( "+melee" ) + " ^7x2]" );
			forecolor	1 1 1 0.8
			//exp forecolor A	( HUD_ALPHA * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.15
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( team( name ) != "TEAM_SPECTATOR" );
			decoration
		}

    }

	//	Local Talking Status
	menuDef
	{
    	name			"amitalking"
		rect			116 22 32 32 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
    	fullScreen		0
    	visible			when( dvarint( ui_hud_hardcore ) == 0 );

		itemDef
		{
			name			"talkingRect"
			rect			0 0 26 26
			forecolor		1 1 1 1
			textscale		0.4
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		UI_AMITALKING
			visible			1
			decoration
		}
	}

	// Remote Talking Status
	menuDef
	{
    	name			"talkers"
		rect			0 120 24 24 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
    	fullScreen		0
    	visible			when( dvarint( ui_hud_hardcore ) == 0 );

		itemDef
		{
			name			"talker1Rect"
			rect			0 0 24 24
			forecolor		1 1 1 1
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_TALKER1
			visible			1
			decoration
		}

		itemDef
		{
			name			"talker2Rect"
			rect			0 24 24 24
			forecolor		1 1 1 1
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_TALKER2
			visible			1
			decoration
		}

		itemDef
		{
			name			"talker3Rect"
			rect			0 48 24 24
			forecolor		1 1 1 1
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_TALKER3
			visible			1
			decoration
		}

		itemDef
		{
			name			"talker4Rect"
			rect			0 72 24 24
			forecolor		1 1 1 1
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_TALKER4
			visible			1
			decoration
		}
	}

	menuDef
	{
		name			"killcam"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		when ( inkillcam() );

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 0 640 112 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			background		"white"
			forecolor		.49 .05 .03 0.5
			visible			1
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 368 640 112 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
			background		"white"
			forecolor		.49 .05 .03 0.5
			visible			1
			decoration
		}

		itemDef
		{
			rect		0 45 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 0
			exp text	( "KILLCAM" );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.90
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	1
			decoration
		}
	}

	// Center obituary (you killed/were killed by)
	menuDef
	{
		name			"CenterObituary"
		rect			0 150 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			1

		itemDef
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		(TEXTSIZE_DEFAULT * .8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CENTER_MESSAGE
			visible			1
			decoration
		}
	}

	// Score Bar
	menuDef
	{
		name			"scorebar"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		when ( ( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") && !inkillcam() && NOT_SPECTATING && !menuisopen( background_main ) && !menuisopen( background_systemlink ) && !menuisopen( scoreboard )) && dvarInt( ui_hud_hardcore ) == 0 && (dvarInt( "ui_score_bar" ) || team( name ) == "TEAM_SPECTATOR" || (dvarInt( "ui_timelimit" ) > 0 && timeLeft() < 0) || (timeLeft() >= 0 && (timeLeft() % 60 < 5 || timeLeft() < 60)) || (timeLeft() < 0 && (timeLeft() % 60 > (0-5))) || (dvarInt( "ui_scorelimit" ) > 0 && max( marinesfield( score ), opforfield( score ) ) / dvarInt( "ui_scorelimit" ) > 0.75 ) ) );

		#define BARWIDTH	400

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			(-BARWIDTH/2) 3 BARWIDTH 18 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			background		"line_horizontal"
			forecolor		0 0 0 1
			visible			1
			decoration
		}

		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@MENU_SCORE_WINNING", team( score ), otherteam( score ) ) );
			//exp text( "Winning " + team( score ) + " - " + otherteam( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	0.3 1 0.3 1
			visible 	when( team( score ) > otherteam( score ) )
			decoration
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@MENU_SCORE_LOSING", otherteam( score ), team( score ) ) );//exp text( "Losing " + otherteam( score ) + " - " + team( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.3 0.3 1
			visible 	when( team( score ) < otherteam( score ) )
			decoration
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		0 20
			exp			text( locString( "@MENU_SCORE_TIED", team( score ), otherteam( score ) ) );//exp text( "Tied " + team( score ) + " - " + otherteam( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.35
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 1 0.3 1
			visible 	when( team( score ) == otherteam( score ) )
			decoration
		}
	}

	// game messages
	menuDef
	{
		name			"gamemessages"
		// (todo: use VERTICAL_ALIGN_TOP in SP)
		rect			6 -105 10 10 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM //y = 65
		fullScreen		0
		visible			when( !inkillcam() );

		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	0
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_LEFT
			textscale			(TEXTSIZE_SMALL*0.65)
			visible				1//when ( dvarint( ui_hud_obituaries ) == 1 && !ui_active() );
		}
	}
	menuDef
	{
		name			"boldgamemessages"
		// (todo: use VERTICAL_ALIGN_TOP in SP, origin 0 180)
		rect			0 -60 10 10 HORIZONTAL_ALIGN_CENTER_SAFEAREA VERTICAL_ALIGN_CENTER_SAFEAREA
		fullScreen		0
		visible			when( !inkillcam() );

		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	1
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_OBJECTIVE
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_CENTER
			textscale			(0.417*0.7) // SP: 0.5
			visible				1//when ( dvarint( ui_hud_obituaries ) == 1 && !ui_active() );
		}
	}
	/*menuDef
	{
		name			"subtitles"
		rect			200 400 10 10 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
		fullScreen		0
		visible			when( !inkillcam() );

		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	2
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_LEFT
			textscale			(TEXTSIZE_SMALL*.8)
			visible				when ( dvarint( ui_hud_obituaries ) == 1 && !ui_active() && dvarint( ui_hud_hardcore ) == 0 );
		}
	}*/

	/* Hold breath hint
	menuDef
	{
		name			"HoldBreathHint"
		rect			0 -130 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible when ( !adsjavelin() && dvarInt( ui_hud_hardcore ) == 0 && !inkillcam() && NOT_SPECTATING );

		itemDef
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		(TEXTSIZE_SMALL*.8)
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_HOLD_BREATH_HINT
			visible			1
			decoration
		}
	}*/

	// Safe area
	menuDef
	{
		name			"safeareaa"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			1

		#include "ui/safearea.menu"
	}
}
